name: Provides Poetry dependencies, lints code with pre-commit and runs unit tests

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        description: Docker image for the job container

      image_options:
        required: false
        type: string
        # we don't need any default container options, but it can't be an empty string
        default: -e NOOP
        description: Options to pass to Docker

      poetry_scripts:
        required: false
        type: string
        description: List of poetry scripts to run
        default: '["poe lint-all", "poe test-unit"]'

      install_pre_commit:
        required: false
        type: boolean
        description: Should we install pre-commit with hooks
        default: true

      debug:
        required: false
        type: boolean
        default: false

      home:
        required: false
        type: string
        description: Home folder location

    secrets:
      DOCKER_USERNAME:
        required: true
        description: User for accessing Docker Hub
      DOCKER_PASSWORD:
        required: true
        description: Password for accessing Docker Hub
      SSH_KEY:
        required: false
        description: Private SSH key to use by default (e.g. for git+ssh://)

env:
  PRE_COMMIT_HOME: /tmp/.cache/pre-commit
  HOME: ${{ inputs.home }}

jobs:
  scripts:
    name: Script
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image_name }}
      options: ${{ inputs.image_options }}
      credentials:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
        with:
          set-safe-directory: true

      - run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"

      - uses: actions/setup-python@v4
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'
          cache-dependency-path: |
            poetry.lock
            .pre-commit-config.yml

      - env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        if: ${{ env.SSH_KEY }}
        uses: dym-ok/inject-ssh-key@v2
        with:
          private-key: ${{ secrets.SSH_KEY }}

      - name: install
        if: ${{ ! inputs.debug }}
        run: poetry install --no-root

      - name: verbose-install
        if: ${{ inputs.debug }}
        run: poetry install --no-root -vvv

      - uses: actions/github-script@v6
        name: run-scripts
        id: run-scripts
        with:
          script: |
            const poetry_scripts = '${{ inputs.poetry_scripts }}';
            const scripts = JSON.parse(poetry_scripts);
            const workspace = process.env["GITHUB_WORKSPACE"];
            for (const script of scripts) {
              console.log(`Running "${script}" in ${workspace}`);
              options = {
                  cwd: workspace,
                  debug: true
              };
              await exec.exec( "poetry", [ "run", ...script.split(" ") ], options);
            }

      - name: debug
        if: failure()
        run: |
          set -v \
          && (printenv | sort )\
          && id \
          && pwd \
          && ls -la \
          && poetry --version \
          && poetry env info \
          && poetry show \
          && pip3 freeze \
          && (cat "${PRE_COMMIT_HOME}/pre-commit.log" || echo "No pre-commit logs")
